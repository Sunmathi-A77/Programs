/*int* sortedSquares(int* nums, int numsSize, int* returnSize) {

    *returnSize=numsSize;

    int* result = (int*)malloc(numsSize * sizeof(int));

    for(int i=0;i<numsSize;i++)
    {
        result[i]=nums[i]*nums[i];
    }

    for(int i=0;i<numsSize-1;i++)
    {
        for(int j=i+1;j<numsSize;j++)
        {
            if(result[i]>result[j])
            {
                int temp=result[i];
                result[i]=result[j];
                result[j]=temp;
            }
        }
    }
    
    return result;
}*/


int* sortedSquares(int* nums, int numsSize, int* returnSize) {

    *returnSize = numsSize;

    int* result = (int*)malloc(numsSize * sizeof(int));

    int left = 0, right = numsSize - 1;
    int pos = numsSize - 1;

    while (left <= right) 
    {
        int leftSquare = nums[left] * nums[left];
        int rightSquare = nums[right] * nums[right];

        if (leftSquare > rightSquare) 
        {
            result[pos--] = leftSquare;
            left++;
        } 
        else 
        {
            result[pos--] = rightSquare;
            right--;
        }
    }

    return result;
}
